{"version":3,"file":"index.modern.js","sources":["../src/Animations/Animation.tsx","../src/Animations/AnimationGroup.tsx"],"sourcesContent":["import React from 'react'\nimport { CSSTransition } from 'react-transition-group';\nimport 'animate.css/animate.min.css';\n\nexport type CssAnimation = 'bounce' | 'flash' | 'pulse' | 'rubberBand' | 'shakeX' | 'shakeY' | 'headShake' | 'swing' | 'tada' | 'wobble' | 'jello' | 'heartBeat' | 'backInDown' | 'backInLeft' | 'backInRight' | 'backInUp' | 'backOutDown' | 'backOutLeft' | 'backOutRight' | 'backOutUp' | 'bounceIn' | 'bounceInDown' | 'bounceInLeft' | 'bounceInRight' | 'bounceInUp' | 'bounceOut' | 'bounceOutDown' | 'bounceOutLeft' | 'bounceOutRight' | 'bounceOutUp' | 'fadeIn' | 'fadeInDown' | 'fadeInDownBig' | 'fadeInLeft' | 'fadeInLeftBig' | 'fadeInRight' | 'fadeInRightBig' | 'fadeInUp' | 'fadeInUpBig' | 'fadeInTopLeft' | 'fadeInTopRight' | 'fadeInBottomLeft' | 'fadeInBottomRight' | 'fadeOut' | 'fadeOutDown' | 'fadeOutDownBig' | 'fadeOutLeft' | 'fadeOutLeftBig' | 'fadeOutRight' | 'fadeOutRightBig' | 'fadeOutUp' | 'fadeOutUpBig' | 'fadeOutTopLeft' | 'fadeOutTopRight' | 'fadeOutBottomRight' | 'fadeOutBottomLeft' | 'flip' | 'flipInX' | 'flipInY' | 'flipOutX' | 'flipOutY' | 'lightSpeedInRight' | 'lightSpeedInLeft' | 'lightSpeedOutRight' | 'lightSpeedOutLeft' | 'rotateIn' | 'rotateInDownLeft' | 'rotateInDownRight' | 'rotateInUpLeft' | 'rotateInUpRight' | 'rotateOut' | 'rotateOutDownLeft' | 'rotateOutDownRight' | 'rotateOutUpLeft' | 'rotateOutUpRight' | 'hinge' | 'jackInTheBox' | 'rollIn' | 'rollOut' | 'zoomIn' | 'zoomInDown' | 'zoomInLeft' | 'zoomInRight' | 'zoomInUp' | 'zoomOut' | 'zoomOutDown' | 'zoomOutLeft' | 'zoomOutRight' | 'zoomOutUp' | 'slideInDown' | 'slideInLeft' | 'slideInRight' | 'slideInUp' | 'slideOutDown' | 'slideOutLeft' | 'slideOutRight' | 'slideOutUp'\n\nexport interface Props {\n\n  /**\n   * The component to animate.\n   * @type {React.ReactNode}\n   * @required\n   * @example <div>Test</div>\n   */\n  children: React.ReactNode,\n\n  /**\n   * The animation to use when the component mounts or when isVisible change to true.\n   * If not set or set to null, No animation will be applied. \n   * Use the animate.css classes.\n   * @type {string}\n   * @default null\n   * @see https://animate.style/\n   * @example 'fadeIn'\n   * @example 'fadeInDown'\n   */\n  animationIn?: CssAnimation | '',\n\n  /**\n   * The animation to use when the component unmounts or when isVisible change to false.\n   * If not set or set to null, No animation will be applied. \n   * Use the animate.css classes.\n   * @type {string}\n   * @default null\n   * @see https://animate.style/\n   * @example 'fadeOut'\n   * @example 'fadeOutDown'\n   */\n  animationOut?: CssAnimation | '',\n\n  /**\n   * The delay in miliseconds to wait before start the entrance animation.\n   * @type {number}\n   * @default 0\n   * @example 500\n   * @example 1000\n   */\n  animationInDelay?: number,\n\n  /**\n   * The delay in miliseconds to wait before start the exit animation.\n   * @type {number}\n   * @default 0\n   * @example 500\n   * @example 1000\n   */\n  animationOutDelay?: number,\n\n  /**\n   * The duration in miliseconds of the entrance animation.\n   * @type {number}\n   * @default 0\n   * @example 500\n   * @example 1000\n   */\n  animationInDuration?: number,\n\n  /**\n   * The duration in miliseconds of the exit animation.\n   * @type {number}\n   * @default 0\n   * @example 500\n   * @example 1000\n   */\n  animationOutDuration?: number,\n\n  /**\n   * Set this to TRUE to start the entrance animation (if defined) and display this component.\n   * Set this to FALSE to start the exit animation (if defined) and hide this component.\n   * @type {boolean}\n   * @default false\n   * @example true\n   */\n  isVisible?: boolean,\n\n  /**\n   * The JSS style applied to the component.\n   * @type {object}\n   * @default null\n   * @example { backgroundColor: '#ff0000' }\n   */\n  style?: object | null,\n\n  /**\n   * The complementar class to apply to animation container.\n   * @type {string}\n   * @default null\n   * @example 'my-class'\n   */\n  className?: string,\n\n  /**\n   * The ref to attach to the animation container.\n   * @type {React.Ref<any>}\n   * @default null\n   */\n  ref?: React.Ref<any> | null,\n}\n\nconst Animation = ({\n  animationIn = '',\n  animationOut = '',\n  animationInDelay = 0,\n  animationOutDelay = 0,\n  animationInDuration = 1000,\n  animationOutDuration = 1000,\n  isVisible = false,\n  style = null,\n  className = '',\n  children,\n  ref = undefined\n}: Props) => {\n  style = {\n    ...style,\n    animationDelay: `${isVisible ? animationInDelay : animationOutDelay}ms`,\n    animationDuration: `${isVisible ? animationInDuration : animationInDuration}ms`,\n  }\n\n  const nodeRef = React.useRef<HTMLDivElement>(null)\n\n  return (\n    <CSSTransition\n      in={isVisible}\n      className={className}\n      appear={true}\n      enter={Boolean(animationIn)}\n      exit={Boolean(animationOut)}\n      style={style}\n      mountOnEnter\n      unmountOnExit\n      ref={ref}\n      nodeRef={nodeRef}\n      timeout={{\n        enter: animationInDelay + animationInDuration,\n        exit: animationOutDelay + animationOutDuration,\n      }}\n      classNames={{\n        appear: isVisible ? `animate__animated` : 'react_animate_css_hide',\n        appearActive: isVisible ? `animate__animated animate__${animationIn}` : 'react_animate_css_hide',\n        appearDone: isVisible ? `animate__animated animate__${animationIn}` : 'react_animate_css_hide',\n        enter: `animate__animated`,\n        enterActive: `animate__animated animate__${animationIn}`,\n        enterDone: `animate__animated animate__${animationIn}`,\n        exit: `animate__animated`,\n        exitActive: `animate__animated animate__${animationOut}`,\n        exitDone: `animate__animated animate__${animationOut}`,\n      }}\n    ><div ref={nodeRef}>{children}</div></CSSTransition>\n  )\n}\n\nexport default Animation ","import React from \"react\"\n\nconst AnimationGroup = () => {\n  return <div></div>\n}\n\nexport default AnimationGroup"],"names":["Animation","animationIn","animationOut","animationInDelay","animationOutDelay","animationInDuration","animationOutDuration","isVisible","style","className","children","ref","undefined","animationDelay","animationDuration","nodeRef","React","useRef","CSSTransition","appear","enter","Boolean","exit","mountOnEnter","unmountOnExit","timeout","classNames","appearActive","appearDone","enterActive","enterDone","exitActive","exitDone","AnimationGroup"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA6GA,IAAMA,SAAS,GAAG,SAAZA,SAAY;8BAChBC;MAAAA,4CAAc;+BACdC;MAAAA,8CAAe;mCACfC;MAAAA,sDAAmB;mCACnBC;MAAAA,uDAAoB;mCACpBC;MAAAA,yDAAsB;mCACtBC;MAAAA,0DAAuB;4BACvBC;MAAAA,wCAAY;wBACZC;MAAAA,gCAAQ;4BACRC;MAAAA,wCAAY;MACZC,gBAAAA;sBACAC;MAAAA,4BAAMC;AAENJ,EAAAA,KAAK,gBACAA,KADA;AAEHK,IAAAA,cAAc,GAAKN,SAAS,GAAGJ,gBAAH,GAAsBC,iBAApC,QAFX;AAGHU,IAAAA,iBAAiB,GAAKP,SAAS,GAAGF,mBAAH,GAAyBA,mBAAvC;AAHd,IAAL;AAMA,MAAMU,OAAO,GAAGC,KAAK,CAACC,MAAN,CAA6B,IAA7B,CAAhB;AAEA,SACED,mBAAA,CAACE,aAAD;AACE,UAAIX;AACJE,IAAAA,SAAS,EAAEA;AACXU,IAAAA,MAAM,EAAE;AACRC,IAAAA,KAAK,EAAEC,OAAO,CAACpB,WAAD;AACdqB,IAAAA,IAAI,EAAED,OAAO,CAACnB,YAAD;AACbM,IAAAA,KAAK,EAAEA;AACPe,IAAAA,YAAY;AACZC,IAAAA,aAAa;AACbb,IAAAA,GAAG,EAAEA;AACLI,IAAAA,OAAO,EAAEA;AACTU,IAAAA,OAAO,EAAE;AACPL,MAAAA,KAAK,EAAEjB,gBAAgB,GAAGE,mBADnB;AAEPiB,MAAAA,IAAI,EAAElB,iBAAiB,GAAGE;AAFnB;AAIToB,IAAAA,UAAU,EAAE;AACVP,MAAAA,MAAM,EAAEZ,SAAS,yBAAyB,wBADhC;AAEVoB,MAAAA,YAAY,EAAEpB,SAAS,mCAAiCN,WAAjC,GAAiD,wBAF9D;AAGV2B,MAAAA,UAAU,EAAErB,SAAS,mCAAiCN,WAAjC,GAAiD,wBAH5D;AAIVmB,MAAAA,KAAK,qBAJK;AAKVS,MAAAA,WAAW,kCAAgC5B,WALjC;AAMV6B,MAAAA,SAAS,kCAAgC7B,WAN/B;AAOVqB,MAAAA,IAAI,qBAPM;AAQVS,MAAAA,UAAU,kCAAgC7B,YARhC;AASV8B,MAAAA,QAAQ,kCAAgC9B;AAT9B;GAfd,EA0BCc,mBAAA,MAAA;AAAKL,IAAAA,GAAG,EAAEI;GAAV,EAAoBL,QAApB,CA1BD,CADF;AA6BD,CAlDD;;AC3GA,IAAMuB,cAAc,GAAG,SAAjBA,cAAiB;AACrB,SAAOjB,mBAAA,MAAA,MAAA,CAAP;AACD,CAFD;;;;"}